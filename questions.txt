Notes on questions

Total of 40 questions to start with

Categories
======================

Front-end:
=========
html:   3 html questions
css:    5 css questions
JS:     12 questions



Back-end:
=========
Mongo: 8 questions
Node:  8 questions
API:   4 questions


questions: {
{
  number: 1,
  category: 'html',
  assetUrl: null,
  type: 'multipleChoice',
  question: "Why is it generally a good idea to position CSS <link>s
  between <head></head> and JS <script>s just before </body>?
  Do you know any exceptions?",
  answers: [
    {answerText: "To have the CSS ready so the page can render properly
  yet not try to execute the JS until the page elements have fully rendered", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 2,
  category: 'html',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What does a doctype declaration do?",
  answers: [
    {answerText: "Specifies the Document Type Definition (DTD) and its version", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 3,
  category: 'html',
  assetUrl: null,
  type: 'multipleChoice',
  question: "Identify which of the following are HTML5 elements?",
  answers: [
    {answerText: "article, aside, section, main, nav, aside, summary, time, figure, figcaption, footer, header, mark, details", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 4,
  category: 'css',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What is the difference between classes and IDs in CSS?",
  answers: [
    {answerText: "Use IDs to target one element, styles to target many elements", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 5,
  category: 'css',
  assetUrl: 'img/question5.jpg',
  type: 'image',
  question: "Describe how the divs below are floated.",
  answers: [
    {answerText: "Div1 is outside of the parent div, div2 and div3 are floated left. float is cleared before div4.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 6,
  category: 'css',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What does * { box-sizing: border-box; } do? What are its advantages?",
  answers: [
    {answerText: "You don't have to include margin and padding in height/width size percentages.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 7,
  category: 'css',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What's the difference between inline and inline-block and block?",
  answers: [
    {answerText: "", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 8,
  category: 'css',
  assetUrl: null,
  type: 'multipleChoice',
  question: "Describe pseudo-elements and discuss what they are used for.",
  answers: [
    {answerText: "A CSS pseudo-element is used to style specified parts of an
    element. For example, it can be used to: Style the first letter, or line,
    of an element. Insert content before, or after,
    the content of an element.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 9,
  category: 'js',
  assetUrl: "img/question9.jpg",
  type: 'image',
  question: "Here's a class.  How would you instantiate this class?",
  answers: [
    {answerText: "const joe = new Person();", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 10,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "When would you not use an arrow function rather than a es5 function?",
  answers: [
    {answerText: "Defining a method on a prototype object.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 11,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "Which of the following is an object:",
  answers: [
    {answerText: "{ 1: 'one', 2: 'two', 3: 'three'}", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 12,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What is event delegation and event bubbling?",
  answers: [
    {answerText: "Event delegation refers to the process of using event
    propagation (bubbling) to handle events at a higher level in the DOM than
    the element on which the event originated. It allows us to attach a single
    event listener for elements that exist now or in the future.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 13,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What is hoisting?",
  answers: [
    {answerText: "Hoisting is the JavaScript interpreter's action of moving
    all variable and function declarations to the top of the current scope.
    However, only the actual declarations are hoisted", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 14,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "What is the difference between =, ==, and ===?",
  answers: [
    {answerText: "Assignment, comparison without type check, comparison with type check.", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 15,
  category: 'js',
  assetUrl: null,
  type: 'multipleChoice',
  question: "Example of Promise in jQuery.",
  answers: [
    {answerText: "$( 'div' ).promise().done(function() {
    $( 'p' ).append( ' Finished! ' );
  });", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},
{
  number: 16,
  category: 'js',
  assetUrl: "img/question16.jpg",
  type: 'image',
  question: "In the example below, what would the expected output be for a and b?",
  answers: [
    {answerText: "", correct: true},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"},
    {answerText: "blah"}
  ]
},



}


html
====

1. Why is it generally a good idea to position CSS <link>s
between <head></head> and JS <script>s just before </body>?
Do you know any exceptions?

2. What does a doctype do?

3. Identify which of the following are HTML5 elements?

css
===

4. What is the difference between classes and IDs in CSS?

5. Describe Floats and how they work. (use example)

6. What does * { box-sizing: border-box; } do? What are its advantages?

7. What's the difference between inline and inline-block and block?

8. Describe pseudo-elements and discuss what they are used for.

js
==

9. Here's a class.  How would you instantiate this class?

10. When would you use an arrow function rather than a es5 function?

11. Which of the following is an object:

12. What is event delegation and event bubbling?

13. What is hoisting?

14. What is the difference between =, ==, and ===?

15. Promise example problem in jQuery.

16. What would the expected output be for a and b?

var a = 'uh oh'

function myFunc() {
  var a = 'hey';
  return a;
}

var b = myFunc();

myFunc();

console.log(b)

17. What is event loop?
What is the difference between call stack and task queue?

18. What is an IIFE?

19. What is the difference between passing by value and passing by reference?

20. Identify the callback in this code snippet:
(or make it an expected output questions)

function test(callback) {
  const hi = "hey";
  callback(hi);
}

function callback(something) {
  console.log(something);
}

test(callback);

==========================================
==========================================

Node
====

21. The difference between import and require?

22. Name three module systems?

23.  Why does console.log in a node file output to terminal instead of the console in the browser?

24. In `require('express')`, what is express?

25. What is the hub of all the dependencies in a project?

26. Would gulp be a dev depenency or a dependency?

27. Choose the correct pair
    require/module.exports
    require/import
    require/export

28. difference {myObj} = require('./filename') and myObj = require('./filename')

Mongo
=====

29.

30.

31.

API
===

32.

33.

34.
